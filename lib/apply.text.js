/*▄────────────────────────────────────▄
  █                                    █
  █  Text                              █
  █  • Коллекция текстов               █
  █                                    █
  █  (присвоение только через скобки)  █
  █                                    █
  ▀────────────────────────────────────▀*/
(() => {
/*┌─────────────────────────────┐
  │ Список локальных переменных │
  └─────────────────────────────┘*/
    let _collection = {};  // Единая коллекция
    let _collections = {}; // Список коллекций
    
/*┌────────────────────────────────────────┐
  │ Очищает все коллекции (сборщик мусора) │
  └────────────────────────────────────────┘*/
    $.gc.text = () => {
        _collection = {};  // Единая коллекция
        _collections = {}; // Список коллекций
    };
    
/*┌──────────────────────────────────┐
  │ Добавляет новую единую коллекцию │
  └──────────────────────────────────┘*/
    $.Text = new Proxy((item) => {
        _collection = new item;
    },
    
/*┌──────────────────────────────────────────────┐
  │ Добавляет новую коллекцию в список коллекций │
  └──────────────────────────────────────────────┘*/
    {get: (target, collection) => (item) => {
        _collections[collection] = new item;
    }});
    
/*┌─────────────────────────────────────┐
  │ Возвращает элемент единой коллекции │
  └─────────────────────────────────────┘*/
    $.text = new Proxy((...args) => {
    // Получаем элемент единой коллекции
        let item = args.flat()[0];
        
    // Возвращаем элемент единой коллекции
        return _collection[item];
    },
    
/*┌──────────────────────────────────────────────────┐
  │ Возвращает элемент коллекции из списка коллекций │
  └──────────────────────────────────────────────────┘*/
    {get: (target, collection) => (...args) => {
    // Получаем элемент коллекции
        let item = args.flat()[0];
        
    // Возвращаем элемент коллекции
        return _collections[collection][item];
    }});
})();
