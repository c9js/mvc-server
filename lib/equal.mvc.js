/*▄───────────────────────────────────────────▄
  █                                           █
  █  Архитектура проектирования (MVC-модель)  █
  █  • Коллекция контроллеров                 █
  █  • Коллекция моделей                      █
  █  • Коллекция интерфейсов                  █
  █                                           █
  █    (присвоение только через равенство)    █
  █                                           █
  ▀───────────────────────────────────────────▀*/
((create) => [
    'Controller', // Коллекция контроллеров
    'Model',      // Коллекция моделей
    'View'        // Коллекция интерфейсов
]
.forEach(component => create(component, component.toLowerCase()))
)((Component, component) => {
/*┌─────────────────────────────┐
  │ Список локальных переменных │
  └─────────────────────────────┘*/
    let _collections = {}; // Список коллекций
    
/*┌────────────────────────────────────────┐
  │ Очищает все коллекции (сборщик мусора) │
  └────────────────────────────────────────┘*/
    $.gc[component] = () => {
        _collections = {}; // Список коллекций
    };
    
/*┌──────────────────────────────────────────────┐
  │ Добавляет новую коллекцию в список коллекций │
  └──────────────────────────────────────────────┘*/
    $[Component] = new Proxy(f=>0, {set: (target, collection, item) => {
        _collections[collection] = new item;
    }});
    
/*┌──────────────────────────────────────────┐
  │ Возвращает коллекцию из списка коллекций │
  └──────────────────────────────────────────┘*/
    $[component] = new Proxy(f=>0, {get: (target, collection) => {
        return _collections[collection];
    }});
});
